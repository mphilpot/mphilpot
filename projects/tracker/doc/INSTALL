-------------------------------------------------------------------------------
Mantis - a php based bugtracking system
Copyright (C) 2000-2002  Kenzaburo Ito - kenito@300baud.org
Copyright (C) 2002-2004  Mantis Team   - mantisbt-dev@lists.sourceforge.net
-------------------------------------------------------------------------------

INSTALLATION

The following details the basic steps for installation on any system.  The
instructions may seem unix-centric but should work fine on Windows systems.

Barring complications, it should take you about 10-20 minutes to install,
configure, and be using Mantis.

These instructions are also available at:
http://manual.mantisbt.org/manual.installation.php

# --- Requirements ----------

* MySQL 3.23.2 and higher
* PHP 4.0.6 and higher
* a webserver

# --- Summary ---------------

1. Tranfer files
2. Uncompress files
3. Generate database tables
4. Edit configuration file
5. PHP File extensions
6. Login

******************************************************************************

1. First, transfer the file to your webserver using whatever method you like
best (ftp, scp, etc).  You will need to telnet/ssh into the server machine for
the next steps.

2. Next, untar/gunzip it to the directory that you want.
The usual command is (1 step):

	tar zxvf <filename.tar.gz>

OR  (2 steps):

	gunzip <filename.tar.gz>
	tar xvf <filename.tar>

Winzip, Stuffit, and other programs should also be able to handle
decompression of the archive.

At this point you may want to rename the directory to something simpler like
'mantis'.  You will use the mv command to rename a directory (Windows users
substitute the "ren" command or use explorer).

mv <directoryname> mantis

If you are upgrading see the UPGRADING document.

3. Next we will create the necessary database tables.  Make sure you have
created the database ahead of time.  You should know your mysql username and
password as well.

Go into the sql directory and run the following command:

mysql -u<username> -p<password> <databasename> < db_generate.sql

You could also cut and paste the sql statements from db_generate.sql into a
package like phpMyAdmin or into your terminal window.

e.g. if your username is bob, password is mypass, database name is bugtracker:

mysql -ubob -pmypass bugtracker < db_generate.sql

You may require an additional host parameter if your SQL server is on another
machine.  e.g. if your server is sqlserver

mysql -h sqlserver -ubob -pmypass bugtracker < db_generate.sql

* WARNING: A DEFAULT ADMINISTRATOR level account is created.  The account name
and password are administrator / root.  Use this when you first login to
Mantis. Immediately go to Manage and create at least one administrator level
account.  Immediately after that DELETE the administrator account.  You can
recreate it but you should delete the account to prevent the cookie_string
from being used to trick the package.  It would be even better to rename the
account or delete it permanently.  REMEMBER: After setting up the package,
REMOVE the default administrator account.

4. The next part involves configuring the installation to work with your
specific setup.

In the installation directory, locate config_inc.php.sample and copy it to
config_inc.php.
Open the file in an editor and edit the values to match your settings.  The
sample file contains only essential settings.  There are many more that
you can use to customize your Mantis installation.  See the customization.html
file for in depth explanations.

The file will overwrite the default values with those necessary for setup.

You can load up admin/check.php to see if you set things up correctly.

*** NOTE: check.php sometimes reports the value of register_globals
incorrectly.  Create a page with this line in it: <? phpinfo() ?>, save it
with a .php extension and load it up in your web browser.  It will, among a
multitude of other things, have the correct value of register_globals that you
are using.

5. Mantis now uses only .php files.

If your webserver is configured for other extensions (.PHP3, .PHTML) then you
will have to have the administrator add support for .PHP files.  This should
be a trivial modification.

Documentation can be found at: http://www.php.net/manual/en/installation.php

6.  Login to your bugtracker and go to the manage section.  Click on the
projects link.  You will need to ADD a new project.  Then EDIT the new project
and remember to ADD at least one category.  Otherwise you won't be able to add
any bug reports.

That should be it.  You're off and running.  For some help on custom editing
of the site please read the CUSTOMIZATION file.

-------------------------------------------------------------------------------
### Upgrading ###
-------------------------------------------------------------------------------

See the files: UPGRADING and admin/index.php

-------------------------------------------------------------------------------
### Troubleshooting ###
-------------------------------------------------------------------------------

See TROUBLESHOOTING

-------------------------------------------------------------------------------
### Useful links ###
-------------------------------------------------------------------------------

http://www.php.net/        -  excellent documentation.
http://www.phpwizard.net/  -  an excellent web front end to mysql.
http://www.phpbuilder.net/ -  good help forums.
http://www.mysql.com/      -  good documentation.
http://www.apache.org/     -  you should be able to find what you need.
